{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaque\\\\desafio-tecnico-shopper\\\\frontend\\\\src\\\\components\\\\MeasureList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MeasureList = () => {\n  _s();\n  const [measures, setMeasures] = useState([]);\n  const [customerCode, setCustomerCode] = useState('');\n  useEffect(() => {\n    if (customerCode) {\n      const fetchMeasures = async () => {\n        try {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/measures/${customerCode}/list`);\n          setMeasures(response.data.measures);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      fetchMeasures();\n    }\n  }, [customerCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: customerCode,\n      onChange: e => setCustomerCode(e.target.value),\n      placeholder: \"C\\xF3digo do cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"  \",\n      onClick: () => setCustomerCode(customerCode),\n      children: \"Buscar Medida\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: measures.map(measure => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [measure.measureType, \" - \", measure.measureValue, \" - \", format(measure.measureDatetime, 'yyyy-MM-dd')]\n      }, measure.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(MeasureList, \"BHKMhoJM5hIjbGDfcV6qTb7eqaI=\");\n_c = MeasureList;\nexport default MeasureList;\nvar _c;\n$RefreshReg$(_c, \"MeasureList\");","map":{"version":3,"names":["React","useState","useEffect","axios","format","jsxDEV","_jsxDEV","MeasureList","_s","measures","setMeasures","customerCode","setCustomerCode","fetchMeasures","response","get","process","env","REACT_APP_API_URL","data","error","console","log","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","measure","measureType","measureValue","measureDatetime","id","_c","$RefreshReg$"],"sources":["C:/Users/jaque/desafio-tecnico-shopper/frontend/src/components/MeasureList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\n\r\n\r\ninterface Measure {\r\n    id: string;\r\n    measureType: string;\r\n    measureValue: number;\r\n    measureDatetime: Date;\r\n}\r\n\r\ninterface MeasuresResponse {\r\n    measures: Measure[];\r\n}\r\n\r\nconst MeasureList: React.FC = () => {\r\n    const [measures, setMeasures] = useState<Measure[]>([]);\r\n    const [customerCode, setCustomerCode] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (customerCode) {\r\n          const fetchMeasures = async (): Promise<void> => {\r\n            try {\r\n                const response = await axios.get<MeasuresResponse>(`${process.env.REACT_APP_API_URL}/measures/${customerCode}/list`);\r\n                setMeasures(response.data.measures);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n          };\r\n          fetchMeasures();\r\n        }\r\n    }, [customerCode]);\r\n\r\n    return (\r\n        <div>\r\n           <input type=\"text\" value={customerCode} onChange={(e) => setCustomerCode(e.target.value)} placeholder=\"CÃ³digo do cliente\" />\r\n           <button className='  '  onClick={() => setCustomerCode(customerCode)}>Buscar Medida</button>\r\n           <ul>\r\n             {measures.map(measure =>(\r\n                <li key={measure.id}>\r\n                  {measure.measureType} - {measure.measureValue} - {format(measure.measureDatetime, 'yyyy-MM-dd')}\r\n                </li>\r\n             ))}\r\n           </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MeasureList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAclC,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,IAAIS,YAAY,EAAE;MAChB,MAAME,aAAa,GAAG,MAAAA,CAAA,KAA2B;QAC/C,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAmB,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,aAAaP,YAAY,OAAO,CAAC;UACpHD,WAAW,CAACI,QAAQ,CAACK,IAAI,CAACV,QAAQ,CAAC;QACvC,CAAC,CAAC,OAAOW,KAAK,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACtB;MACF,CAAC;MACDP,aAAa,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,oBACIL,OAAA;IAAAiB,QAAA,gBACGjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEd,YAAa;MAACe,QAAQ,EAAGC,CAAC,IAAKf,eAAe,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5H3B,OAAA;MAAQ4B,SAAS,EAAC,IAAI;MAAEC,OAAO,EAAEA,CAAA,KAAMvB,eAAe,CAACD,YAAY,CAAE;MAAAY,QAAA,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5F3B,OAAA;MAAAiB,QAAA,EACGd,QAAQ,CAAC2B,GAAG,CAACC,OAAO,iBAClB/B,OAAA;QAAAiB,QAAA,GACGc,OAAO,CAACC,WAAW,EAAC,KAAG,EAACD,OAAO,CAACE,YAAY,EAAC,KAAG,EAACnC,MAAM,CAACiC,OAAO,CAACG,eAAe,EAAE,YAAY,CAAC;MAAA,GADxFH,OAAO,CAACI,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACzB,EAAA,CA/BID,WAAqB;AAAAmC,EAAA,GAArBnC,WAAqB;AAiC3B,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}