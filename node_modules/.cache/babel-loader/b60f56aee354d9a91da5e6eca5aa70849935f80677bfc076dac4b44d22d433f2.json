{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaque\\\\desafio-tecnico-shopper\\\\frontend\\\\src\\\\components\\\\UploadForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [customerCode, setCustomerCode] = useState('');\n  const [measureType, setMeasureType] = useState('WATER');\n  const [measureDatetime, setMeasureDatetime] = useState('');\n  const handleImageUpload = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!image || !customerCode || !measureDatetime) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n    reader.onloadend = async () => {\n      try {\n        var _reader$result;\n        const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/upload`, {\n          image: (_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString().split(',')[1],\n          customer_code: customerCode,\n          measure_type: measureType,\n          measure_datetime: measureDatetime\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageUpload,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: customerCode,\n      onChange: e => setCustomerCode(e.target.value),\n      placeholder: \"C\\xF3digo do cliente\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      value: measureDatetime,\n      onChange: e => setMeasureDatetime(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: measureType,\n      onChange: e => setMeasureType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"WATER\",\n        children: \"WATER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GAS\",\n        children: \"GAS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Carregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"gDFEze8o9NVUG5WFiyJeg1PmCNQ=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","image","setImage","customerCode","setCustomerCode","measureType","setMeasureType","measureDatetime","setMeasureDatetime","handleImageUpload","e","target","files","handleSubmit","preventDefault","reader","FileReader","readAsDataURL","onloadend","_reader$result","response","post","process","env","REACT_APP_API_URL","result","toString","split","customer_code","measure_type","measure_datetime","console","log","data","error","onSubmit","children","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/jaque/desafio-tecnico-shopper/frontend/src/components/UploadForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst UploadForm: React.FC = () => {\r\n    const [image, setImage] = useState<File | null>(null);\r\n    const [customerCode, setCustomerCode] = useState('');\r\n    const [measureType, setMeasureType] = useState('WATER');\r\n    const [measureDatetime, setMeasureDatetime] = useState('');\r\n\r\n    const handleImageUpload  = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n        }\r\n    };\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!image ||  !customerCode || !measureDatetime) return;\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(image);\r\n        reader.onloadend = async () => {\r\n            try {\r\n              const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/upload`, {\r\n                image: reader.result?.toString().split(',')[1],\r\n                customer_code: customerCode,\r\n                measure_type: measureType,\r\n                measure_datetime: measureDatetime,\r\n              })\r\n              console.log(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"file\" onChange={handleImageUpload} required />\r\n          <input type=\"text\" value={customerCode} onChange={(e) => setCustomerCode(e.target.value)} placeholder=\"CÃ³digo do cliente\" required />\r\n          <input type=\"datetime-local\" value={measureDatetime} onChange={(e) => setMeasureDatetime(e.target.value)} required />\r\n          <select value={measureType} onChange={(e) => setMeasureType(e.target.value)}>\r\n            <option value=\"WATER\">WATER</option>\r\n            <option value=\"GAS\">GAS</option>\r\n          </select>\r\n          <button type=\"submit\">Carregar</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}